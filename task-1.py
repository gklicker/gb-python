"""
Задание:
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31  22
37  43
51  86

3   5   32
2   4   6
-1  64  -8

3   5   8  3
8   3   7   1


Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix(двух матриц).
 Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д.
"""

m1 = [[31, 22], [37, 43], [51, 86]]
m2 = [[3, 5, 32], [2, 4, 6], [-1, 64, -8]]
m3 = [[3, 5, 8, 3], [8, 3, 7, 1]]


class Matrix:
    __m = None

    def __init__(self, m):
        self.__m = m

    def __str__(self):
        return "\n".join(["\t".join([str(col) for col in row]) for row in self.__m])

    def __add__(self, other):
        old = self.__m
        if len(self.__m) != len(other.__m):
            raise Exception("Разная размерность матриц")
        for row in range(len(self.__m)):
            if len(self.__m[row]) != len(other.__m[row]):
                self.__m = old
                raise Exception("Разная размерность матриц")
            for col in range(len(self.__m[row])):
                self.__m[row][col] += other.__m[row][col]
        return self


matrix = Matrix(m1)
matrix2 = Matrix(m2)
print(matrix + matrix2)